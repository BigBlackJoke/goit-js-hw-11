{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst form = document.querySelector(\".form\");\nconst input = document.querySelector(\".searching-input\");\nconst gallery = document.querySelector(\".gallery-elements\");\n\nconst imagesBackend = {\n    webformatURL: \"\",\n    largeImageURL: \"\",\n    tags: \"\",\n    likes: 0,\n    views: 0,\n    comments: 0,\n    downloads: 0\n};\n\nconst options = {\n  method: \"POST\",\n  body: JSON.stringify(imagesBackend),\n//   headers: {\n//     \"Content-Type\": \"application/json; charset=UTF-8\",\n//   },\n};\n\nform.addEventListener(\"submit\", event => {\n    event.preventDefault();\n    if (input.value != \"\") {\n        const searchParams = new URLSearchParams({\n            key: \"44096290-4b282435e4320beb633e0ff8a\",\n            q: input.value,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: \"true\",\n        });\n\n        const url = `https://pixabay.com/api/?${searchParams}`;\n\n        fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(() => {\n                const makingGallery = imagesBackend.map((imageBackend => {\n                    const list = document.createElement('li');\n                    const a = document.createElement('a');\n                    const img = document.createElement('img');\n                    a.href = imageBackend.largeImageURL;\n                    img.src = imageBackend.webformatURL;\n                    img.alt = imageBackend.tags;\n                    a.appendChild(img);\n                    list.appendChild(a);\n                    return list;\n                }));\n                gallery.append(...makingGallery);\n            })\n            .catch((error) => console.log(error));\n        \n    } else {\n        iziToast.show({\n            message: 'Searching input cannot be empty! Please fill the input to start searching.',\n            messageColor: 'rgba(255, 255, 255, 1)',\n            messageSize: '16px',\n            messageLineHeight: '24px',\n            backgroundColor: 'rgba(239, 64, 64, 1)',\n            position: 'topCenter',\n            timeout: 2000\n        });\n    }\n});"],"names":["form","input","gallery","imagesBackend","event","url","response","makingGallery","imageBackend","list","a","img","error","iziToast"],"mappings":"svBAOA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,mBAAmB,EAEpDC,EAAgB,CAClB,aAAc,GACd,cAAe,GACf,KAAM,GACN,MAAO,EACP,MAAO,EACP,SAAU,EACV,UAAW,CACf,EAIQ,KAAK,UAAUA,CAAa,EAMpCH,EAAK,iBAAiB,SAAUI,GAAS,CAErC,GADAA,EAAM,eAAc,EAChBH,EAAM,OAAS,GAAI,CASnB,MAAMI,EAAM,4BARS,IAAI,gBAAgB,CACrC,IAAK,qCACL,EAAGJ,EAAM,MACT,WAAY,QACZ,YAAa,aACb,WAAY,MACxB,CAAS,CAEmD,GAEpD,MAAMI,CAAG,EACJ,KAAMC,GAAa,CAChB,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MAChC,CAAa,EACA,KAAK,IAAM,CACR,MAAMC,EAAgBJ,EAAc,IAAKK,GAAgB,CACrD,MAAMC,EAAO,SAAS,cAAc,IAAI,EAClCC,EAAI,SAAS,cAAc,GAAG,EAC9BC,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAD,EAAE,KAAOF,EAAa,cACtBG,EAAI,IAAMH,EAAa,aACvBG,EAAI,IAAMH,EAAa,KACvBE,EAAE,YAAYC,CAAG,EACjBF,EAAK,YAAYC,CAAC,EACXD,CAC3B,GACgBP,EAAQ,OAAO,GAAGK,CAAa,CAC/C,CAAa,EACA,MAAOK,GAAU,QAAQ,IAAIA,CAAK,CAAC,CAEhD,MACQC,EAAS,KAAK,CACV,QAAS,6EACT,aAAc,yBACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,uBACjB,SAAU,YACV,QAAS,GACrB,CAAS,CAET,CAAC"}